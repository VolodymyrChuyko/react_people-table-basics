{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PageNotFound/PageNotFound.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PageNotFound","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","slug","sex","to","classNames","PeopleTable","people","personSlug","map","born","died","fatherName","motherName","mother","father","preparePeopleList","forEach","child","find","woman","man","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","useParams","useEffect","getPeopleFromServer","peopleFromServer","length","NavBar","role","isActive","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a9a4abbb.chunk.js","sourcesContent":["export const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const PageNotFound: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\nexport type Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name, slug, sex,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n  personSlug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, personSlug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n            mother,\n            father,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames(\n                { 'has-background-warning': slug === personSlug },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother ? (\n                  <PersonLink person={mother} />\n                ) : (\n                  motherName || '-'\n                )}\n              </td>\n\n              <td>\n                {father ? (\n                  <PersonLink person={father} />\n                ) : (\n                  fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\n\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable';\n\nfunction preparePeopleList(people: Person[]) {\n  people.forEach(person => {\n    const child = person;\n\n    child.mother = people.find(woman => woman.name === child.motherName);\n    child.father = people.find(man => man.name === child.fatherName);\n  });\n}\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const { slug: personSlug = '' } = useParams();\n\n  useEffect(() => {\n    const getPeopleFromServer = async () => {\n      setIsLoading(true);\n      try {\n        const peopleFromServer = await getPeople();\n\n        preparePeopleList(peopleFromServer);\n        setPeople(peopleFromServer);\n      } catch {\n        setError('Something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              {error && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  {error}\n                </p>\n              )}\n\n              {!error && people.length === 0 && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!error && people.length > 0 && (\n                <PeopleTable people={people} personSlug={personSlug} />\n              )}\n            </>\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => (\n              classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => (\n              classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}